// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id           String        @id @default(cuid())
  name         String
  phoneNumber  String
  email        String        @unique
  enteredBy    User          @relation(fields: [userId], references: [id])
  userId       String
  repairOrders RepairOrder[]
  Invoice      Invoice[]
}

model User {
  id        String        @id @default(cuid())
  name      String
  email     String        @unique
  sub       String
  picture   String
  customers Customer[]
  repairs   RepairOrder[] @relation("tech")
  intakes   RepairOrder[] @relation("intake")
  invoices  Invoice[]
}

model RepairOrder {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  neededBy    DateTime?
  active      Boolean    @default(true)
  status      String     @default("Awaiting Estimate")
  description String
  accessories String[]
  location    String?
  tech        User?      @relation("tech", fields: [techId], references: [id])
  techId      String?
  customer    Customer   @relation(fields: [customerId], references: [id])
  customerId  String
  intakeBy    User       @relation("intake", fields: [userId], references: [id])
  userId      String
  product     Product    @relation(fields: [productId], references: [id])
  productId   String
  Estimate    Estimate[]
}

model Product {
  id           String        @id @default(cuid())
  make         String
  model        String        @unique
  type         String
  value        String?
  repairOrders RepairOrder[]
}

model Estimate {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  description   String
  price         String
  parts         Part[]
  invoice       Invoice?    @relation(fields: [invoiceId], references: [id])
  invoiceId     String?
  repairOrder   RepairOrder @relation(fields: [repairOrderId], references: [id])
  repairOrderId String
}

model Part {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  partNumber  String
  description String
  price       String
  status      String   @default("Ordered")
  estimate    Estimate @relation(fields: [estimateId], references: [id])
  estimateId  String
}

model Invoice {
  id         String     @id @default(cuid())
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  customer   Customer   @relation(fields: [customerId], references: [id])
  preparedBy User       @relation(fields: [userId], references: [id])
  customerId String
  userId     String
  estimates  Estimate[]
}
